@using Diamond.Models.Factory
@using Diamond.Models.Materials
@model Factory
@{
    ViewData["Title"] = $"Завод \"{Model.Name}\"";
}

<form>
    <div>
        <input type="submit" value="Сохранить" asp-controller="Factory" asp-action="Update" asp-route-factory="@Model"/>
        <input type="submit" value="Удалить" asp-controller="Factory" asp-action="Delete" asp-route-Id="@Model.Id">
        <input type="submit" value="Добавить участок" asp-controller="Region" asp-action="Create" asp-route-Factory="@Model"/>
        <input type="submit" value="Маршруты" asp-controller="Route" asp-action="List" asp-route-Id="@Model.Id" />
        @if (Model.Plan.FirstOrDefault(p=>p.Status == PlanStatus.AWAIT_CONFIRMATION || p.Status == PlanStatus.STOP) != null){
            <input class="btn btn-danger" type="submit" value="Планирование" asp-controller="Plan" asp-action="List" asp-route-Id="@Model.Id" />
        }
        else
        {
            <input type="submit" value="Планирование" asp-controller="Plan" asp-action="List" asp-route-Id="@Model.Id" />
        }
    </div>

    <p>Номер завода<input name="Id" asp-for="Id" value="@Model.Id" readonly></p>
    <p>Название завода<input name="Name" value="@Model.Name"></p>

    @if (Model.Regions.Count > 0)
    {
        <footer class="border-top footer" />
        <p>Список участков</p>
        <table class="table table-bordered">
            <tr>
                <td>Название</td>
                <td>Тип участка</td>
                <td>Статус</td>
                <td>Загруженность</td>
                <td></td>
            </tr>
            @foreach(var Region in Model.Regions.OrderBy(r=>r.Id)) {
                <tr>
                    <td>@Region.Name</td>
                    <td>@Html.DisplayFor(f => f.Regions!.First(r => r.Id == Region.Id).Type)</td>
                    <td>@Html.DisplayFor(f => f.Regions!.First(r => r.Id == Region.Id).Status)</td>
                    <td>@Region.Workload</td>
                    <td>
                        <a asp-controller="Region" asp-action="Edit" 
                            asp-route-Id="@Region.Id" 
                            class="btn btn-primary">Редактировать</a>
                        <a asp-controller="Factory" asp-action="DeleteRegion"
                            asp-route-ModelId="@Model.Id" asp-route-RegionId="@Region.Id" 
                            class="btn btn-danger">Удалить</a>
                        <a asp-controller="Factory" asp-action="SetDowntime"
                           asp-route-RegionId="@Region.Id"
                           class="btn btn-warning">Сломать (отладка)</a>
                    </td>
                </tr>
            }
        </table>
    }

    @if (Model.Routes.Count > 0)
    {
        <footer class="border-top footer" />
        <p>Список маршрутов</p>
        <table class="table table-bordered">
            <tr>
                <td>Название</td>
                <td>Простои</td>
                <td>Мощность (г/час)</td>
                <td>Максимальная вместимость</td>
                <td>Что может производить</td>
                <td>Маршрут</td>
            </tr>
            @foreach (var Route in Model.Routes)
            {
                string MaxVolume = "";
                foreach (var m in Route.GetAcceptableMaterials())
                {
                    MaxVolume += $"{m.Name} - {Route.GetMaxVolume(m.Id)} | ";
                }
                <tr>
                    <td>@Route.Name</td>
                    <td>@Route.GetDowntimeCount()</td>
                    <td>@MaterialForRegion.ToString(Route.GetMaxPowerOnMaterial()).Replace("\n", " | ")</td>
                    <td>@MaxVolume</td>
                    <td>@ProductGroup.ToString(Route.GetAvailableProducts())</td>
                    <td>@Route.GetContent</td>
                </tr>
            }
        </table>
    }

    @if (Model.Requests.Count > 0)
    {
        <footer class="border-top footer"/>
        <p>Список заказов</p>
        <table class="table table-bordered">
            <tr>
                <td>№</td>
                <td>Товар</td>
                <td>Количество</td>
                <td>Желаемая дата выполнения</td>
                <td>Статус</td>
            </tr>
            @foreach (var Request in Model.Requests)
            {
                <tr>
                    <td>@Request.Id</td>
                    <td>@Request.GetProductSpecific!.GetProductGroup!.Name</td>
                    <td>@Request.Count</td>
                    <td>@Request.DateOfDesiredComplete.ToString("dd.MM.yyyy")</td>
                    <td>@Html.DisplayFor(f => f.Requests.First(r => r.Id == Request.Id).Status)</td>
                </tr>
            }
        </table>

        <p>Итого</p>
        <table class="table table-bordered">
            <tr>
                <td>Продукция</td>
                <td>Количество</td>
            </tr>
            @for (int i = 0; i < Model.ProductsCommonId.Count; ++i)
            {
                <tr>
                    <td>@(Model.ProductsCommonId[i])</td>
                    <td>@(Model.ProductsCommonSize[i])</td>
                </tr>
            }
        </table>
    }
</form>