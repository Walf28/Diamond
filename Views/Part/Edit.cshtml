@using Diamond.Models.Factory
@model Part
@{
    ViewData["Title"] = "Изменение плана";
}

<form method="post">
    <div>
        <input type="submit" value="Назад"
        asp-controller="Part"
        asp-action="List"
        asp-route-Id="@Model.FactoryId"
        formmethod="get"
        formnovalidate />
        <input type="submit" value="Сохранить"/>
    </div>
    <input id="factoryId" type="number" value="@Model.FactoryId" asp-for="@Model.FactoryId" hidden readonly/>
    <input id="planId" type="number" value="@Model.Id" asp-for="@Model.Id" hidden readonly/>

    <p>Продукция<input type="text" value="@ViewBag.ProductName" readonly/></p>
    <p>К какому сроку надо выполнить
        <input
        value="@Model.ComingSoon.ToLocalTime()"
        min="@DateTime.Now.ToLocalTime().ToString("yyyy-MM-ddTHH:mm")"
        readonly/></p>
    <p>На каком участке находится<input value="@(Model.Region == null ? "-" :Model.Region.Name)" readonly/></p>
    <p>Выбранный размер<input value="@Model.Size" readonly/></p>
    <p>Маршрут
        <select id="selectedRoute" asp-for="@Model.RouteId" onchange="GetResultTime(value, planId.value)" required>
            @if (Model.Route.GetTimeToCompleteFullPlan() == double.PositiveInfinity)
            {
                <option value="@Model.RouteId">
                    @($"{Model.Route.GetContent} | ?")
                </option>
            }
            else
            {
            <option value="@Model.RouteId">
                @($"{Model.Route.GetContent} | {TimeSpan.FromMinutes(Model.Route.GetTimeToCompleteFullPlan()).TotalHours:f2} ч.")</option>
            }
            @foreach(var r in (ViewBag.Routes as List<Route>)!)
            {
                double time = r.GetTimeToEndDowntime();
                if (time == 0)
                {
                    <option value="@r.Id" style="background-color:lime">
                        @($"{r.GetContent} | {TimeSpan.FromMinutes(r.GetTimeToCompleteFullPlan()).TotalHours:f2} ч.")</option>
                }
                else if (double.IsInfinity(time))
                {
                    <option value="@r.Id" style="background-color:red">
                        @($"{r.GetContent} | {r.GetTimeToCompleteFullPlan()}")
                    </option>
                }
                else
                {
                    <option value="@r.Id" style="background-color:orange">
                        @($"{r.GetContent} | {TimeSpan.FromMinutes(r.GetTimeToCompleteFullPlan()).TotalHours:f2} ч.")
                    </option>
                }
            }
        </select></p>
    <p>Необходимое время (с учётом имеющихся заказов)
        <input id="resultTime"
            type="text"
            readonly/></p>
</form>
@section Scripts {
    <script>
        function GetResultTime(routeId, planId)
        {
            $.ajax({
                url: '@Url.Action("GetResultTimeOnRoute", "Part")',
                type: 'GET',
                data: { routeId, planId },
                success: function (data) {
                    document.getElementById("resultTime").setAttribute('value', `${data.hours}:${data.minutes}:${data.seconds}`);
                }
            });
        }
    </script>
}