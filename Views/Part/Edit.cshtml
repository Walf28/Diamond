@using Diamond.Models.Factory
@model Part
@{
    ViewData["Title"] = "Изменение плана";
}

<form method="post">
    <div>
        <input type="submit" value="Назад"
        asp-controller="Part"
        asp-action="List"
        asp-route-Id="@Model.FactoryId"
        formmethod="get"
        formnovalidate />
        <input type="submit" value="Сохранить"/>
    </div>
    <input id="factoryId" type="number" value="@Model.FactoryId" asp-for="@Model.FactoryId" hidden readonly/>
    <input id="planId" type="number" value="@Model.Id" asp-for="@Model.Id" hidden readonly/>

    @if (Model.Status == PartStatus.QUEUE || Model.Status == PartStatus.AWAIT_CONFIRMATION)
    {
        <p>Статус
            <select asp-for="@Model.Status">
                <option value="@PartStatus.QUEUE">В очереди</option>
                <option value="@PartStatus.AWAIT_CONFIRMATION">Ожидает подтверждения</option>
            </select>
        </p>
    }
    <p>Продукция<input type="text" value="@ViewBag.ProductName" readonly/></p>
    <p>
        К какому заказу привязан
        <select asp-for="@Model.OrderId"
                asp-items="@(new SelectList(ViewBag.Orders, "Id", "Customer"))">
            <option value="0">Без привязки</option>
        </select>
    </p>
    <p>К какому сроку надо выполнить
        <input
        value="@Model.ComingSoon.ToLocalTime()"
        min="@DateTime.Now.ToLocalTime().ToString("yyyy-MM-ddTHH:mm")"
        readonly/>
    </p>
    <p>На каком участке находится<input value="@(Model.Region == null ? "-" :Model.Region.Name)" readonly/></p>
    <p>Выбранный размер<input value="@Model.Size" readonly/></p>
    <div>
        @if (Model.Region != null)
        {
            <p>Способ транспортировки продукции
                <select name="variantRoute" onchange="SelectTypeChangeRoute(value)">
                    <option id="0" selected>Автоматически</option>
                    <option id="1">Вручную</option>
                </select>
            </p>
        }
        else
        {
            <input name="variantRoute" type="number" value="0" hidden readonly />
        }

        <p>Маршрут
            <select name="selectedRoute0" asp-for="@Model.RouteId" onchange="GetResultTime(value, planId.value)" required>
                @{
                    var rar = ViewBag.Routes as List<Route>;
                    var r1 = rar!.Where(r => r.GetTimeToEndDowntime() == 0).ToList();
                    var r3 = rar!.Where(r => r.GetTimeToEndDowntime() == double.PositiveInfinity).ToList();
                    var r2 = rar!.Where(r => !r1.Contains(r) && !r3.Contains(r)).ToList();
                    foreach (var r in r1)
                    {
                        <option value="@r.Id" style="background-color:lime">
                            @($"{r.GetContent} | {TimeSpan.FromMinutes(r.GetTimeToCompleteFullPlan(Model.ComingSoon) + r.GetTimeToCompletePart(Model)).TotalHours:f2} ч.")
                        </option>
                    }
                    foreach (var r in r2)
                    {
                        <option value="@r.Id" style="background-color:orange">
                            @($"{r.GetContent} | {TimeSpan.FromMinutes(r.GetTimeToCompleteFullPlan(Model.ComingSoon) + r.GetTimeToCompletePart(Model)).TotalHours:f2} ч.")
                        </option>
                    }
                    foreach (var r in r3)
                    {
                        <option value="@r.Id" style="background-color:red">
                            @($"{r.GetContent} | ? ч.")
                        </option>
                    }
                }
            </select>
            <select name="selectedRoute1" asp-for="@Model.RouteId" onchange="GetResultTime(value, planId.value)" required hidden>
                @{
                    var _rar = ViewBag.AllRoutes as List<Route>;
                    var _r1 = _rar!.Where(r => r.GetTimeToEndDowntime() == 0).ToList();
                    var _r3 = _rar!.Where(r => r.GetTimeToEndDowntime() == double.PositiveInfinity).ToList();
                    var _r2 = _rar!.Where(r => !_r1.Contains(r) && !_r3.Contains(r)).ToList();
                    foreach (var r in _r1)
                    {
                        <option value="@r.Id" style="background-color:lime">
                            @($"{r.GetContent} | {TimeSpan.FromMinutes(r.GetTimeToCompleteFullPlan(Model.ComingSoon) + r.GetTimeToCompletePart(Model)).TotalHours:f2} ч.")
                        </option>
                    }
                    foreach (var r in _r2)
                    {
                        <option value="@r.Id" style="background-color:orange">
                            @($"{r.GetContent} | {TimeSpan.FromMinutes(r.GetTimeToCompleteFullPlan(Model.ComingSoon) + r.GetTimeToCompletePart(Model)).TotalHours:f2} ч.")
                        </option>
                    }
                    foreach (var r in _r3)
                    {
                        <option value="@r.Id" style="background-color:red">
                            @($"{r.GetContent} | ? ч.")
                        </option>
                    }
                }
            </select>
    </p>
    </div>
    <p>Необходимое время (с учётом имеющихся заказов)
        <input id="resultTime"
            type="text"
            readonly/></p>
</form>

@section Scripts {
    <script>
        function GetResultTime(routeId, planId)
        {
            $.ajax({
                url: '@Url.Action("GetResultTimeOnRoute", "Part")',
                type: 'GET',
                data: { routeId, planId },
                success: function (data) {
                    document.getElementById("resultTime").setAttribute('value', `${data.hours}:${data.minutes}:${data.seconds}`);
                }
            });
        }
        function SelectTypeChangeRoute(type)
        {
            if (type == 0)
            {
                document.getElementById("selectedRoute0").style.display = 'block';
                document.getElementById("selectedRoute1").style.display = 'none';
            }
            else
            {
                document.getElementById("selectedRoute0").style.display = 'none';
                document.getElementById("selectedRoute1").style.display = 'block';
            }
        }
    </script>
}