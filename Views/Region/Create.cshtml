@using Diamond.Models.Factory
@using Diamond.Models.Materials
@model Region
@{
    ViewData["Title"] = "Добавление участка";
}

<form method="post">
    @* Обычные поля *@
    <div>
        <input type="submit" asp-controller="Factory" asp-action="Edit" asp-route-Id="@Model.FactoryId" value="Назад" formnovalidate />
        <input type="submit" value="Добавить" asp-controller="Region" asp-action="Add" asp-route-region="@Model"/>
    </div>
    <p>Номер завода<input name="FactoryId" asp-for="@Model.FactoryId" value="@Model.FactoryId" readonly/></p>
    <p>Название участка<input type="text" asp-for="@Model.Name" value="@Model.Name" required/></p>
    <p>Тип участка<select name="TypeId" asp-for="@Model.TypeId" asp-items="@(new SelectList(ViewBag.technologys, "Id", "Name"))" required></select></p>
    <p>Время прохода продукции по участку<input name="TransitTime" asp-for="@Model.TransitTime" type="number" min="0" required/></p>

    @* Связи с другими участками *@
    @if (Model.Factory != null && Model.Factory.Regions != null && Model.Factory.Regions.Count > 0)
    {
        <footer class="border-top footer" />
        <p>Предыдущие участки<button type="button" onclick="tParentAdd()">Добавить</button></p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Название</td>
                    <td>Тип</td>
                    <td></td>
                </tr>
            </thead>
            <tbody id="tParents"></tbody>
        </table>

        <footer class="border-top footer" />
        <p>Последующие участки<button type="button" onclick="tChildrenAdd()">Добавить</button></p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Название</td>
                    <td>Тип</td>
                    <td></td>
                </tr>
            </thead>
            <tbody id="tChildren"></tbody>
        </table>
    }

    @* Производительность на каждом сырье *@
    <div>
        <footer class="border-top footer" />
        <p>Настройка производительности<button type="button" onclick="tPowerAdd()">Добавить</button></p>
        <table class="table table-bordered">
            <thead>
                 <tr>
                     <td>Сырьё</td>
                     <td>Производительность</td>
                     <td>Величина</td>
                     <td></td>
                 </tr>
            </thead>
            <tbody id="tPower"></tbody>
        </table>
    </div>
</form>

@section Scripts {
    <script>
        let tParentIndex = 0;
        let tChildrenIndex = 0;
        let tPowerIndex = 0;
        const elementParent = document.getElementById("tParents");
        const elementChildren = document.getElementById("tChildren");
        const elementPower = document.getElementById("tPower");

        function tParentAdd(){
            const newElement = document.createElement("tr");
            newElement.setAttribute('id', `tParentsTR${tParentIndex}`)
            newElement.innerHTML = `
            <td>
                <select name="parentRegions" onchange="tParentSelected(value, ${tParentIndex})">
                    <option value="0">Не выбрано</option>
                    @foreach (var item in Model.Factory!.Regions!)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </td>
            <td>
                <input id="tParentsTRType${tParentIndex}" type="text" value="" readonly/>
            </td>
            <td>
                <button type="button" onclick="tParentDelete(${tParentIndex})" class="btn btn-danger">Удалить</button>
            </td>`;
            elementParent.appendChild(newElement);
            tParentIndex++;
        }

        function tParentDelete(id){
            const newElement = document.getElementById(`tParentsTR${id}`);
            newElement.remove();
        }

        function tParentSelected(regionId, index){
            const newElement = document.getElementById(`tParentsTRType${index}`);
            if (regionId == 0)
            {
                newElement.setAttribute('value', "");
                return;
            }
            $.ajax({
                url: '@Url.Action("GetNameTypeRegion", "Region")',
                type: 'GET',
                data: { regionId },
                success: function (data) {
                    newElement.setAttribute('value', data.value);
                }
            });
        }

        function tChildrenAdd(){
            const newElement = document.createElement("tr");
            newElement.setAttribute('id', `tChildrenTR${tChildrenIndex}`)
            newElement.innerHTML = `
            <td>
                <select name="childrenRegions" onchange="tChildrenSelected(value, ${tChildrenIndex})">
                    <option value="0">Не выбрано</option>
        @foreach (var item in Model.Factory!.Regions!)
        {
                            <option value="@item.Id">@item.Name</option>
        }
                </select>
            </td>
            <td>
                <input id="tChildrenTRType${tChildrenIndex}" type="text" value="" readonly/>
            </td>
            <td>
                <button type="button" onclick="tChildrenDelete(${tChildrenIndex})" class="btn btn-danger">Удалить</button>
            </td>`;
            elementChildren.appendChild(newElement);
            tChildrenIndex++;
        }

        function tChildrenDelete(id){
            const newElement = document.getElementById(`tChildrenTR${id}`);
            newElement.remove();
        }

        function tChildrenSelected(regionId, index){
            const newElement = document.getElementById(`tChildrenTRType${index}`);
            if (regionId == 0)
            {
                newElement.setAttribute('value', "");
                return;
            }
            $.ajax({
                url: '@Url.Action("GetNameTypeRegion", "Region")',
                type: 'GET',
                data: { regionId },
                success: function (data) {
                    newElement.setAttribute('value', data.value);
                }
            });
        }

        function tPowerAdd(){
            const newElement = document.createElement("tr");
            newElement.setAttribute('id', `tPowerTR${tPowerIndex}`)
            newElement.innerHTML = `
            <td>
                <select name="selectedMaterials"">
                    <option value="0">Не выбрано</option>
        @foreach (var item in ViewBag.materials)
        {
                            <option value="@item.Id">@item.Name</option>
        }
                </select>
            </td>
            <td>
                <input id="tPowerTR" name="selectedMaterialsPower" type="number" min="0" value="0"/>
            </td>
            <td>г/час</td>
            <td>
                <button type="button" onclick="tPowerDelete(${tPowerIndex})" class="btn btn-danger">Удалить</button>
            </td>`;
            elementPower.appendChild(newElement);
            tPowerIndex++;
        }

        function tPowerDelete(id){
            const newElement = document.getElementById(`tPowerTR${id}`);
            newElement.remove();
        }
    </script>
}