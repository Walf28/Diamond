@using Diamond.Models.Factory
@using Diamond.Models.Materials
@model Region
@{
    ViewData["Title"] = $"Участок \"{Model.Name}\"";
}

<form>
    <div>
        <input type="submit" value="Назад" asp-controller="Factory" asp-action="Edit" asp-route-Id="@Model.FactoryId" formnovalidate/>
        <input type="submit" value="Сохранить" asp-controller="Region" asp-action="Update" asp-route-region="@Model"/>
        @if (Model.Downtime == null)
        {
            <input type="submit" value="Управление простаиванием" asp-controller="Downtime" asp-action="Create" asp-route-Id="@Model.Id" formmethod="get"/>
        }
        else
        {
            <input type="submit" value="Управление простаиванием" asp-controller="Downtime" asp-action="Edit" asp-route-Id="@Model.Downtime.Id" formmethod="get"/>
        }
    </div>
    <p>Номер завода<input name="FactoryId" asp-for="@Model.FactoryId" value="@Model.FactoryId" readonly /></p>
    <input asp-for="@Model.Id" value="@Model.Id" readonly hidden/>
    <p>Название участка<input type="text" asp-for="@Model.Name" value="@Model.Name" required /></p>
    <p>Тип участка<select name="TypeId" asp-for="@Model.TypeId" asp-items="@(new SelectList(ViewBag.technologys, "Id", "Name"))" required></select></p>
    <p>Время прохода продукции по участку<input name="TransitTime" asp-for="@Model.TransitTime" type="number" min="0" required /></p>

    @if (Model.Factory != null && Model.Factory.Regions != null && Model.Factory.Regions.Count > 0 && !(Model.Factory.Regions.Count == 1 && Model.Factory.Regions[0].Id == Model.Id))
    {
        <footer class="border-top footer" />
        <p>Предыдущие участки<button type="button" onclick="tParentAdd()">Добавить</button></p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Название</td>
                    <td>Тип</td>
                    <td></td>
                </tr>
            </thead>
            <tbody id="tParents">
                @if (Model.RegionsParents.Count > 0)
                {
                    int index = 0;
                    foreach(var region in Model.RegionsParents)
                    {
                        <tr id="tParentsTR@(index)">
                            <td>
                                <select name="parentRegions" onchange="tParentSelected(value, @index)">
                                @foreach (var allRegions in Model.Factory.Regions)
                                {
                                    if (allRegions.Id == Model.Id)
                                        continue;
                                    if (region.Id == allRegions.Id)
                                    {
                                        <option value="@allRegions.Id" selected>@allRegions.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@allRegions.Id">@allRegions.Name</option>
                                    }
                                }
                                </select>
                            </td>
                            <td>
                                <input id="tParentsTRType@(index)" type="text" value="@region.Type.Name" readonly />
                            </td>
                            <td>
                                <button type="button" onclick="tParentDelete(@(index++))" class="btn btn-danger">Удалить</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <footer class="border-top footer" />
        <p>Последующие участки<button type="button" onclick="tChildrenAdd()">Добавить</button></p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <td>Название</td>
                    <td>Тип</td>
                    <td></td>
                </tr>
            </thead>
            <tbody id="tChildren">
                @if (Model.RegionsChildrens.Count > 0)
                {
                    int index = 0;
                    foreach (var region in Model.RegionsChildrens)
                    {
                        <tr id="tChildrenTR@(index)">
                            <td>
                                <select name="childrenRegions" onchange="tChildrenSelected(value, @index)">
                                    @foreach (var allRegions in Model.Factory!.Regions!)
                                    {
                                        if (allRegions.Id == Model.Id)
                                            continue;
                                        else if (allRegions.Id == region.Id)
                                        {
                                            <option value="@allRegions.Id" selected>@allRegions.Name</option>
                                        }
                                        else
                                        {
                                            <option value="@allRegions.Id">@allRegions.Name</option>
                                        }
                                    }
                                </select>
                            </td>
                            <td>
                                <input id="tChildrenTRType@(index)" type="text" value="@region.Type.ToString()" readonly />
                            </td>
                            <td>
                                <button type="button" onclick="tChildrenDelete(@(index++))" class="btn btn-danger">Удалить</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }

    @if ((Model.Materials != null && Model.Materials.Count > 0) || ((List<Material>)ViewBag.NewMaterials).Count > 0)
    {
        <p>Настройка производительности (г/час)</p>
        List<Material> lm = ViewBag.NewMaterials;
        Model.Materials ??= [];
        int k = 0;
        if (Model.Materials.Count > 0){
            for (int i = 0; i < Model.Materials.Count; ++i, ++k)
            {
                <div>
                    <input type="number" asp-for="@Model.Materials[i].MaterialId" value="@Model.Materials[i].MaterialId" hidden />
                    <input type="number" asp-for="@Model.Materials[i].Id" value="@Model.Materials[i].Id" hidden />
                    <p>@Model.Materials[i].Material.Name<input type="number" asp-for="@Model.Materials[i].Power" min="0" value="@Model.Materials[i].Power" /></p>
                </div>
            }
        }

        List<Material> RemainingMaterial = ViewBag.NewMaterials;
        for (int i = 0; i <RemainingMaterial.Count; ++i, ++k)
        {
            Model.Materials.Add(new());
            <div>
                <input type="number" asp-for="@Model.Materials[k].MaterialId" value="@RemainingMaterial[i].Id" hidden />
                <p>@RemainingMaterial[i].Name<input type="number" asp-for="@Model.Materials[k].Power" min="0" value="0" /></p>
            </div>
        }
    }
</form>

@section Scripts {
    <script>
        const elementParent = document.getElementById("tParents");
        const elementChildren = document.getElementById("tChildren");
        let tParentIndex = Number(`@Model.RegionsParents.Count`);
        let tChildrenIndex = Number(`@Model.RegionsChildrens.Count`);

        function tParentAdd(){
            const newElement = document.createElement("tr");
            newElement.setAttribute('id', `tParentsTR${tParentIndex}`)
            newElement.innerHTML = `
            <td>
                <select name="parentRegions" onchange="tParentSelected(value, ${tParentIndex})">
                    <option value="0">Не выбрано</option>
        @foreach (var item in Model.Factory!.Regions!.Where(r=>r.Id != Model.Id))
        {
                            <option value="@item.Id">@item.Name</option>
        }
                </select>
            </td>
            <td>
                <input id="tParentsTRType${tParentIndex}" type="text" value="" readonly/>
            </td>
            <td>
                <button type="button" onclick="tParentDelete(${tParentIndex})" class="btn btn-danger">Удалить</button>
            </td>`;
            elementParent.appendChild(newElement);
            tParentIndex++;
        }

        function tParentDelete(id){
            const newElement = document.getElementById(`tParentsTR${id}`);
            newElement.remove();
        }

        function tParentSelected(regionId, index){
            const newElement = document.getElementById(`tParentsTRType${index}`);
            if (regionId == 0)
            {
                newElement.setAttribute('value', "");
                return;
            }
            $.ajax({
                url: '@Url.Action("GetNameTypeRegion", "Region")',
                type: 'GET',
                data: { regionId },
                success: function (data) {
                    newElement.setAttribute('value', data.value);
                }
            });
        }

        function tChildrenAdd(){
            const newElement = document.createElement("tr");
            newElement.setAttribute('id', `tChildrenTR${tChildrenIndex}`)
            newElement.innerHTML = `
            <td>
                <select name="childrenRegions" onchange="tChildrenSelected(value, ${tChildrenIndex})">
                    <option value="0">Не выбрано</option>
        @foreach (var item in Model.Factory!.Regions!.Where(r => r.Id != Model.Id))
        {
                                <option value="@item.Id">@item.Name</option>
        }
                </select>
            </td>
            <td>
                <input id="tChildrenTRType${tChildrenIndex}" type="text" value="" readonly/>
            </td>
            <td>
                <button type="button" onclick="tChildrenDelete(${tChildrenIndex})" class="btn btn-danger">Удалить</button>
            </td>`;
            elementChildren.appendChild(newElement);
            tChildrenIndex++;
        }

        function tChildrenDelete(id){
            const newElement = document.getElementById(`tChildrenTR${id}`);
            newElement.remove();
        }

        function tChildrenSelected(regionId, index){
            const newElement = document.getElementById(`tChildrenTRType${index}`);
            if (regionId == 0)
            {
                newElement.setAttribute('value', "");
                return;
            }
            $.ajax({
                url: '@Url.Action("GetNameTypeRegion", "Region")',
                type: 'GET',
                data: { regionId },
                success: function (data) {
                    newElement.setAttribute('value', data.value);
                }
            });
        }
    </script>
}