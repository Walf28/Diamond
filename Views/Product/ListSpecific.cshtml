@using Diamond.Models.Products
@model Product
@{
    ViewData["Title"] = $"Типы упаковок \"{Model.Name}\"";
}

<h1>@($"Типы упаковок \"{Model.Name}\"")</h1>
<div>
    <input type="submit" onclick="location.href='@Url.Action("ListGroup", "Product")'" value="Назад" />
    <input type="button" onclick="location.href='@Url.Action("CreateSpecific", "Product", new{groupId = Model.Id})'" value="Добавить" />
</div>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Размер (гр.)</th>
            <th>Цена (руб.)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProductsSpecific.OrderBy(ps=>ps.Size)) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Size)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="EditSpecific" asp-route-productId="@item.Id" class="btn btn-primary">Редактировать</a>
                    <a asp-action="DeleteSpecific" asp-route-productId="@Model.Id" asp-route-id="@item.Id" class="btn btn-danger"
                       onclick="javascript:return confirm('Вы уверены, что хотите удалить данный элемент (@($"{item.ProductGroup.Name} - {item.Size} гр., {item.Price} руб.)")?');">
                       Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>